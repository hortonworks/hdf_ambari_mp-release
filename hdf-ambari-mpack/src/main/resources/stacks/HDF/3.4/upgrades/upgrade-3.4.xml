<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<upgrade xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="upgrade-pack.xsd">
    <target>3.4.*.*</target>
    <target-stack>HDF-3.4</target-stack>
    <skip-failures>false</skip-failures>
    <skip-service-check-failures>false</skip-service-check-failures>
    <type>ROLLING</type>
    <prerequisite-checks/>

    <order>

        <group xsi:type="cluster" name="PRE_CLUSTER" title="Prepare Upgrade">
            <direction>UPGRADE</direction>
            <skippable>true</skippable>
            <supports-auto-skip-failure>false</supports-auto-skip-failure>

            <execute-stage service="NIFI" component="NIFI_MASTER" title="Review NIFI Flows">
                <task xsi:type="manual">
                    <message>Please determine if you need to stop any currently running NIFI flows before proceeding with this upgrade.</message>
                </task>
            </execute-stage>
        </group>

        <group xsi:type="cluster" name="PREPARE_BACKUPS" title="Prepare Backups">
            <direction>UPGRADE</direction>
            <skippable>true</skippable>
            <supports-auto-skip-failure>false</supports-auto-skip-failure>

            <execute-stage service="RANGER" component="RANGER_ADMIN" title="Pre Upgrade Ranger Admin Backup">
                <task xsi:type="manual">
                    <message>Before continuing, please backup the Ranger Admin database on the following host(s): {{hosts.all}}.</message>
                </task>
            </execute-stage>

            <execute-stage service="STREAMLINE" component="STREAMLINE_SERVER" title="Backup SAM Database">
                <task xsi:type="manual">
                    <message>Before continuing, please backup the SAM database.</message>
                </task>
            </execute-stage>

            <execute-stage service="REGISTRY" component="REGISTRY_SERVER" title="Backup Registry Database">
                <task xsi:type="manual">
                    <message>Before continuing, please backup the Registry database.</message>
                </task>
            </execute-stage>

            <execute-stage service="NIFI_REGISTRY" component="NIFI_REGISTRY_MASTER" title="Backup NiFi Registry Database">
                <task xsi:type="manual">
                    <message>Before continuing, please backup the NiFi Registry database.</message>
                </task>
            </execute-stage>

        </group>

        <group name="ZOOKEEPER" title="ZooKeeper">
            <supports-auto-skip-failure>false</supports-auto-skip-failure>
            <service name="ZOOKEEPER">
                <component>ZOOKEEPER_SERVER</component>
            </service>
        </group>

        <group name="KAFKA" title="Kafka">
            <skippable>true</skippable>
            <service name="KAFKA">
                <component>KAFKA_BROKER</component>
            </service>
        </group>

        <group name="KNOX" title="Knox">
            <skippable>true</skippable>
            <service name="KNOX">
                <component>KNOX_GATEWAY</component>
            </service>
        </group>

        <group name="STORM" title="Storm">
            <skippable>true</skippable>
            <service name="STORM">
                <component>NIMBUS</component>
                <component>SUPERVISOR</component>
                <component>STORM_UI_SERVER</component>
                <component>DRPC_SERVER</component>
            </service>
        </group>

        <group name="SERVICE_CHECK_1" title="Kafka and Storm Service Checks" xsi:type="service-check">
            <direction>UPGRADE</direction>
            <skippable>true</skippable>
            <priority>
                <service>ZOOKEEPER</service>
                <service>KAFKA</service>
                <service>STORM</service>
            </priority>
            <exclude>
                <service>AMBARI_METRICS</service>
                <service>AMBARI_INFRA</service>
                <service>LOGSEARCH</service>
                <service>NIFI</service>
                <service>REGISTRY</service>
                <service>STREAMLINE</service>
                <service>RANGER</service>
            </exclude>
        </group>

        <group name="CLIENTS" title="Client Components">
            <service-check>false</service-check>
            <service name="ZOOKEEPER">
                <component>ZOOKEEPER_CLIENT</component>
            </service>

            <service-check>true</service-check>
            <service name="KAFKA">
                <component>KAFKA_CLIENT</component>
            </service>

            <service-check>true</service-check>
            <service name="STORM">
                <component>STORM_CLIENT</component>
            </service>
        </group>

        <group name="REGISTRY" title="Registry">
            <skippable>true</skippable>
            <service name="REGISTRY">
                <component>REGISTRY_SERVER</component>
            </service>
        </group>

        <group name="STREAMLINE" title="Streaming Analytics Server">
            <skippable>true</skippable>
            <service name="STREAMLINE">
                <component>STREAMLINE_SERVER</component>
            </service>
        </group>

        <group name="SERVICE_CHECK_2" title="Registry and Streaming Service Checks" xsi:type="service-check">
            <direction>UPGRADE</direction>
            <skippable>true</skippable>
            <priority>
                <service>ZOOKEEPER</service>
                <service>KAFKA</service>
                <service>STORM</service>
                <service>REGISTRY</service>
                <service>STREAMLINE</service>
            </priority>
            <exclude>
                <service>AMBARI_METRICS</service>
                <service>AMBARI_INFRA</service>
                <service>LOGSEARCH</service>
                <service>NIFI</service>
                <service>NIFI_REGISTRY</service>
                <service>RANGER</service>
            </exclude>
        </group>

        <group xsi:type="stop" name="STOP_LOW_LEVEL_SERVICE_COMPONENTS_NIFI" title="Stop Components for Nifi and NiFi Registry">
            <service-check>false</service-check>
            <skippable>true</skippable>
            <supports-auto-skip-failure>false</supports-auto-skip-failure>
            <parallel-scheduler/>

            <service name="NIFI">
                <component>NIFI_MASTER</component>
                <component>NIFI_CA</component>
            </service>

            <service name="NIFI_REGISTRY">
                <component>NIFI_REGISTRY_MASTER</component>
            </service>

        </group>

        <group xsi:type="restart" name="NIFI_REGISTRY" title="NIFI_REGISTRY">
            <service-check>false</service-check>
            <skippable>true</skippable>
            <parallel-scheduler/>
            <service name="NIFI_REGISTRY">
                <component>NIFI_REGISTRY_MASTER</component>
            </service>
        </group>

        <group xsi:type="restart" name="NIFI" title="NIFI">
            <service-check>false</service-check>
            <skippable>true</skippable>
            <parallel-scheduler/>
            <service name="NIFI">
                <component>NIFI_CA</component>
                <component>NIFI_MASTER</component>
            </service>
        </group>

        <group name="SERVICE_CHECK_3" title="Nifi Service Checks" xsi:type="service-check">
            <direction>UPGRADE</direction>
            <skippable>true</skippable>
            <priority>
                <service>ZOOKEEPER</service>
                <service>KAFKA</service>
                <service>NIFI</service>
            </priority>
            <exclude>
                <service>STORM</service>
                <service>AMBARI_METRICS</service>
                <service>AMBARI_INFRA</service>
                <service>LOGSEARCH</service>
                <service>REGISTRY</service>
                <service>STREAMLINE</service>
                <service>RANGER</service>
            </exclude>
        </group>

        <group name="RANGER" title="Ranger">
            <skippable>true</skippable>
            <supports-auto-skip-failure>false</supports-auto-skip-failure>
            <service name="RANGER">
                <component>RANGER_ADMIN</component>
                <component>RANGER_USERSYNC</component>
                <component>RANGER_TAGSYNC</component>
            </service>
        </group>

        <group name="SERVICE_CHECK_4" title="Ranger Service Checks" xsi:type="service-check">
            <direction>UPGRADE</direction>
            <skippable>true</skippable>
            <priority>
                <service>ZOOKEEPER</service>
                <service>KAFKA</service>
                <service>RANGER</service>
            </priority>
            <exclude>
                <service>STORM</service>
                <service>AMBARI_METRICS</service>
                <service>AMBARI_INFRA</service>
                <service>LOGSEARCH</service>
                <service>REGISTRY</service>
                <service>STREAMLINE</service>
                <service>NIFI</service>
            </exclude>
        </group>

        <!--
        After processing this group, the user-specified Kerberos descriptor will be updated to work with
        the new stack-level Kerberos descriptor.
        -->
        <group xsi:type="cluster" name="UPDATE_KERBEROS_DESCRIPTORS" title="Update Kerberos Descriptors">
            <condition xsi:type="security" type="kerberos"/>
            <execute-stage title="Update the user-specified Kerberos descriptor">
                <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.UpgradeUserKerberosDescriptor"/>
            </execute-stage>
        </group>

        <group xsi:type="cluster" name="ALL_HOST_OPS" title="Finalize Hosts">
            <scope>COMPLETE</scope>
            <execute-stage title="Update remaining HDF stack to {{version}}">
                <task xsi:type="execute">
                    <script>scripts/stack_select_set_all.py</script>
                    <function>actionexecute</function>
                </task>
            </execute-stage>
        </group>

        <group xsi:type="cluster" name="FINALIZE_PRE_CHECK" title="Finalize {{direction.text.proper}} Pre-Check">
            <direction>UPGRADE</direction>

            <execute-stage title="Check Component Versions">
                <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckAction" />
            </execute-stage>
        </group>

        <group xsi:type="cluster" name="POST_CLUSTER" title="Finalize {{direction.text.proper}}">
            <skippable>true</skippable>
            <supports-auto-skip-failure>false</supports-auto-skip-failure>

            <execute-stage title="Confirm Finalize">
                <direction>UPGRADE</direction>
                <task xsi:type="manual">
                    <message>Please confirm you are ready to finalize.</message>
                </task>
            </execute-stage>

            <execute-stage title="Save Cluster State">
                <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.FinalizeUpgradeAction">
                </task>
            </execute-stage>
        </group>
    </order>

    <processing>
        <service name="ZOOKEEPER">
            <component name="ZOOKEEPER_SERVER">
                <pre-upgrade/>
                <pre-downgrade />
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>

            <component name="ZOOKEEPER_CLIENT">
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
        </service>

        <service name="KAFKA">
            <component name="KAFKA_BROKER">
                <pre-upgrade />
                <pre-downgrade/> <!--  no-op to prevent config changes on downgrade -->
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
        </service>

        <service name="KNOX">
            <component name="KNOX_GATEWAY">
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
        </service>

        <service name="STORM">
            <component name="NIMBUS">
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
            <component name="SUPERVISOR">
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
            <component name="STORM_UI_SERVER">
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
            <component name="DRPC_SERVER">
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
        </service>

        <service name="REGISTRY">
            <component name="REGISTRY_SERVER">
                <pre-upgrade/>
                <pre-downgrade/>
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
        </service>

        <service name="STREAMLINE">
            <component name="STREAMLINE_SERVER">
                <pre-upgrade/>
                <pre-downgrade/>
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
        </service>

        <service name="NIFI">
            <component name="NIFI_MASTER">
                <pre-upgrade/>
                <pre-downgrade/> <!--  no-op to prevent config changes on downgrade -->
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
            <component name="NIFI_CA">
                <pre-upgrade/>
                <pre-downgrade/> <!--  no-op to prevent config changes on downgrade -->
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
        </service>

        <service name="NIFI_REGISTRY">
            <component name="NIFI_REGISTRY_MASTER">
                <pre-upgrade/>
                <pre-downgrade/>
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
        </service>

        <service name="RANGER">
            <component name="RANGER_ADMIN">
                <pre-upgrade>
                    <task xsi:type="execute" hosts="all">
                        <summary>Stop Ranger Admin</summary>
                        <script>scripts/ranger_admin.py</script>
                        <function>stop</function>
                    </task>

                    <task xsi:type="execute" hosts="all">
                        <script>scripts/ranger_admin.py</script>
                        <function>set_pre_start</function>
                    </task>

                    <task xsi:type="execute" hosts="any">
                        <summary>Upgrading Ranger database schema</summary>
                        <script>scripts/ranger_admin.py</script>
                        <function>setup_ranger_database</function>
                    </task>

                    <task xsi:type="configure_function" hosts="all" />

                    <task xsi:type="execute" hosts="any">
                        <summary>Applying Ranger java patches</summary>
                        <script>scripts/ranger_admin.py</script>
                        <function>setup_ranger_java_patches</function>
                    </task>
                </pre-upgrade>
                <pre-downgrade/>

                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>

            </component>

            <component name="RANGER_USERSYNC">
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>

            <component name="RANGER_TAGSYNC">
                <upgrade>
                    <task xsi:type="restart-task" />
                </upgrade>
            </component>
        </service>

    </processing>
</upgrade>
